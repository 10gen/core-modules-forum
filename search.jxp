<%

/*
 * "highlight" takes an array of search results and an array of search terms.
 * For each search term, it strips the term to its stem and then it uses a regular expression to search
 * for all matching similar words in each result and put them in a highlighted <span> element.
 *
 * An alternative way of doing this would be to take each word of the result and "stem" it, then compare it
 * to each search term, but this was rejected because it is a) uglier than this and b) would take forever.
 *
 */

var suffix = "able|ible|al|ial|ed|en|er|est|ful|ic|ing|ion|tion|ation|ition|ity|ty|ive|ative|itive|less|ly|ment|ness|ous|eous|ious|s|es|y";
var prefix = "anti|de|dis|en|em|fore|in|im|il|ir|inter|mid|mis|non|over|pre|re|semi|sub|super|trans|un|under";

core.text.stem();
function highlight(result, searchterm) {
    if(result == null)
        return;

    searchterm = Search.queryToArray(searchterm);

    for(var i=0; i<searchterm.length; i++) {
        var stem = Stem.stem(searchterm[i]);

        // go through result, replacing search terms with highlighted search terms
        var reg = new RegExp("(\\b)(("+prefix+")?"+stem+"("+suffix+")?)(\\b)", "gi");
        result = result.replace(reg, "$1<span class=\"highlight\">$2</span>$5");

    }
    return result;
}


// extract up to m words before the search term and n words after for context
function summarize(result, searchterm) {
        var m = 15, n = 20;

        if(result == null)
            return;

        searchterm = Search.queryToArray(searchterm);
        var stem = Stem.stem(searchterm[0]);
        var summary = new RegExp("(\\w+\\W+){"+m+"}("+prefix+")?"+stem+"("+suffix+")?(\\W+\\w+){"+n+"}", "i");
        match = summary.exec(result);

        // if there is trailing header and footer
        if(match)
             return "..."+match[0]+"..."
        else {
             summary = new RegExp("(\\w+\\W+){"+m+"}("+prefix+")?"+stem+"("+suffix+")?(\\W+\\w+){0,"+n+"}", "i");
             match = summary.exec(result);
        // if there is trailing header
             if(match) 
                  return "..."+match[0];
             else {
                  summary = new RegExp("(\\w+\\W+){0,"+m+"}("+prefix+")?"+stem+"("+suffix+")?(\\W+\\w+){"+n+"}", "i");
                  match = summary.exec(result);
        // if there is trailing footer
                  if(match) 
                       return match[0]+"...";
                  else {
        // no trailing header or footer
                       summary = new RegExp("(\\w+\\W+){0,"+m+"}("+prefix+")?"+stem+"("+suffix+")?(\\W+\\w+){0,"+n+"}", "i");
                       match = summary.exec(result);
                       return match[0];
                  }
             }
        }
}

core.app.forum.controller();
core.app.forum.html.forumheader("Forums | Search results");
core.app.forum.data.thread();

var query = request.query;


print("<div>Search results for \""+request.query+"\":</div>");

cursor = Search.search(db.forum.topics, query );
if(cursor.length > 0) {
    core.app.forum.html.topictable("Matching topics:", null, cursor, null, [], {createThread: false, thisid: null});
}
else {
    %>
    <h1>Matching topics:</h1>
    No matching topics.
    <%
}
%>


<h1>Matching threads:</h1>

<%
threads = Search.search(db.forum.threads, query);
if(threads.length > 0){
    for(var i = 0; i < threads.length; i++){
       %>
       <div class="threadbox">
       <div class="title"><a href="viewthread?id=<%= threads[i]._id %>"><%= highlight(threads[i].getTitle(), query) %></a></div>
       <%
            var snippets = Search.snippet(threads[i], query, threads[i].SEARCH_OPTIONS);
            for(var j=0; snippets != null && j < snippets.length; j++) {
                %>
                <div class="content">
                <%= highlight(summarize(snippets[j].text, query), query) %>
                </div>
                <%
            }%>
       </div>
       <%
    }
}
else {
     %>
     No matches in threads.
     <%
}


htmlfooter();
%>
