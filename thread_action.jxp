<%
// Form handler to deal with actions on posts in threads.
    core.net.uri();
var uri = new URI(request.getURL());
var selected = [];
for(var i in uri.args){
    if(uri.args[i].key == "select"){
        selected.push(uri.args[i].value);
    }
}

var decPost = function(post){
    post.parent.count -= 1;
    db.forum.threads.save(post.parent);

    var topic = post.parent.topic;
    while(topic){
        topic.postCount -= 1;
        db.forum.topics.save(topic);
        topic = topic.parent;
    }
}

var incPost = function(post){
    post.parent.count += 1;
    db.forum.threads.save(post.parent);

    var topic = post.parent.topic;
    while(topic){
        topic.postCount += 1;
        db.forum.topics.save(topic);
        topic = topic.parent;
    }
}

if(request.action == "delete"){
    for(var i in selected){
        var p = db.forum.posts.findOne({_id: selected[i]});
        p.deleted = user;
        decPost(p);
        db.forum.posts.save(p);
    }

}

if(request.action == "undelete"){
    for(var i in selected){
        var p = db.forum.posts.findOne({_id: selected[i]});
        p.deleted = false;
        incPost(p);
        db.forum.posts.save(p);
    }

}

if(request.action == "moderate"){
    for(var i in selected){
        var p = db.forum.posts.findOne({_id: selected[i]});
        p.moderated = user;
        decPost(p);
        db.forum.posts.save(p);
    }
}

if(request.action == "moderate"){
    for(var i in selected){
        var p = db.forum.posts.findOne({_id: selected[i]});
        p.moderated = user;
        decPost(p);
        db.forum.posts.save(p);
    }
}

response.setResponseCode(301);
response.setHeader("Location", "./");
%>