<%
// Form handler to deal with actions on posts in threads.
    core.net.uri();
core.app.forum.data.thread();
core.app.forum.data.deletion();
var uri = new URI(request.getURL());
var thread = db.forum.threads.findOne({_id: request.threadId});
var selected = [];
for(var i in uri.args){
    if(uri.args[i].key == "select"){
        selected.push(uri.args[i].value);
    }
}

var modifyPostCount = function(thread, num){
    thread.count += num;
    db.forum.threads.save(thread);

    var topic = thread.topic;
    while(topic){
        topic.postCount += num;
        db.forum.topics.save(topic);
        topic = topic.parent;
    }
};

var subtPost = function(attr){
    for(var i in selected){
        var p = thread.getDescendant(selected[i]);

        var dlist = db.forum.deleted.findOne({thread: thread});
        if(! dlist) dlist = new Forum.data.DeletionList(thread);
        dlist.deletions.push(new Forum.data.Deletion(p, p.getID(), attr, user));
        db.forum.deleted.save(dlist);

        if(p == thread.findFirstPost()){
            // create new "fake" post with the same title, author, etc.
            p.content = "(post deleted)";
            thread.saveDescendant(p);
        }
        else {
            thread.removeDescendant(selected[i]);
            modifyPostCount(thread, -1);
        }
        db.forum.threads.save(thread);
    }
}

var addPost = function(attr){
    for(var i in selected){
        var dlist = db.forum.deleted.findOne({thread: thread});
        for(var deletionIndex = 0; deletionIndex < dlist.deletions.length; deletionIndex++){
            var deletion = dlist.deletions[deletionIndex];
            if(deletion.location == selected[i]){
                thread.placeDescendant(deletion.post, deletion.location);
                dlist.deletions.splice(deletionIndex, 1);
                thread.saveDescendant(thread.getDescendant(selected[i]));
                db.forum.threads.save(thread);
                break;
            }
        }

        if(dlist.deletions.length == 0){
            db.forum.deleted.remove(dlist);
        }
        else {
            db.forum.deleted.save(dlist);
        }
        modifyPostCount(thread, 1);
    }
}

if(request.action == "delete"){
    subtPost("deleted");
}

if(request.action == "undelete"){
    addPost("deleted");
}

if(request.action == "moderate"){
    subtPost("moderated");
}

if(request.action == "unmoderate"){
    addPost("moderated");
}

response.setResponseCode(301);
response.setHeader("Location", "./");
%>