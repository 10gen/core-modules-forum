<% /**
*      Copyright (C) 2008 10gen Inc.
*  
*    Licensed under the Apache License, Version 2.0 (the "License");
*    you may not use this file except in compliance with the License.
*    You may obtain a copy of the License at
*  
*       http://www.apache.org/licenses/LICENSE-2.0
*  
*    Unless required by applicable law or agreed to in writing, software
*    distributed under the License is distributed on an "AS IS" BASIS,
*    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*    See the License for the specific language governing permissions and
*    limitations under the License.
*/ %>

<%
/**
 * @param cssClass the class to make each link (defaults to absent)
 * @param url the url which shows a given page (defaults to current page)
 * @param paramName the argument name to use in the URL (defaults to "page") (FIXME: use routes)
 * @param first      display a link that goes to the first page?
 * @param prev       display a link that goes to the previous page?
 *                   If the "prev" link goes to page 1, it will say "first".
 * @param next       display a link that goes to the next page?
 *                   If the "next" link goes to page the last page, it will say "last".
 * @param last       display a link that goes to the last page?
 * 
 */
processArgs("pager");
core.ext.getdefault();
var w = pager.getWindow();
var first = w.getFirstPage();
var last = w.getLastPage();
if(first >= last) return;

var n = pager.pageNumber();
var skip = pager.nextlinkInterval;

var cssClass = Ext.getdefault(pager.displayOpts, "cssClass", "");
var url = Ext.getdefault(pager.displayOpts, "url", null);
if (url == null) { // i.e. do this lazily
    url = new URL(request.getURL());
}
var paramName = Ext.getdefault(pager.displayOpts, "paramName", "page");

linkTo = function(target, text){
    text = text || target;
%>
<a class="<%= cssClass %>" href="<%= url.replaceArg(paramName, target) %>"><%= text %></a>
<%
}

if(n - skip > 1 && Ext.getdefault(pager.displayOpts, "first", true)){
    // "first" link
    linkTo(1, "first");
}


if(first > 1 && Ext.getdefault(pager.displayOpts, "prev", true)){
    // "prev" link
    if(n - skip > 1)
        linkTo(n - skip, "prev");
    else
        linkTo(1, "first");
}

for(var i = first; i < n; i++){
    linkTo(i);
}
%>
<b><%= n %></b>
<%
for(var i = n+1; i <= last; i++){
    linkTo(i);
}
if(last < pager.numPages() && Ext.getdefault(pager.displayOpts, "next", true)){
    // "next" link
    if(n + skip < pager.numPages())
        linkTo(n + skip, "next");
    else
        linkTo(pager.numPages(), "last");
}

if(n + skip < pager.numPages() && Ext.getdefault(pager.displayOpts, "last", true)){
    // "last" link
    linkTo(pager.numPages(), "last");

}

%>
