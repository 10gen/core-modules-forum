<%
// topicTable: draw a table for a topic.
// This includes: a name, a description, any subtopics, threads,
// and actions for those threads.
//
// If threads is null, don't draw any part of the thread table.
//
// subs is expected to be a JavaScript array; threads is expected to be null or
// a DBCursor.
processArgs("name", "description", "subs", "threads", "actions", "opts");
core.ext.getdefault();
core.app.forum.js.yui();
core.app.forum.html.form();

opts = opts || {};
var createThread = true;
var topic;
if (opts.thisid){
    topic = db.forum.topics.findOne({_id: opts.thisid});
    createThread = topic.allowPosts;
}

// Whether to try to create links for all these functions.
var createThread = (opts.createThread == null) ? createThread : opts.createThread;
var createTopic = (opts.createTopic == null) ? true : opts.createTopic;
var editUser = (opts.editUser == null) ? true : opts.editUser;
var topicActions = (opts.topicActions == null)? [] : opts.topicActions;
var buttons = (opts.buttons == null)? true : opts.buttons;
var addActions = (opts.addActions == null)? true : opts.addActions;

var paging = Ext.getdefault(opts, "paging", true);

// We implement some actions here because we use them in both index and
// viewtopic.
var moveThread = app.Forum.Controller.hasPermission(user, "moveThread");
var moveTopic = app.Forum.Controller.hasPermission(user, "moveTopic");
var hideTopic = app.Forum.Controller.hasPermission(user, "hideTopic");
var deleteThread = app.Forum.Controller.hasPermission(user, "deleteThread");
var moderateThread = app.Forum.Controller.hasPermission(user, "moderateThread");


var topics = db.forum.topics.find({parent: null}).toArray();
topicActions = [];
topics = [{_id: null, name: "(Top Level)"}].concat(topics);

t = topic || topics[0];

if(hideTopic){
    topicActions.push({title: "Hidden",
                       func: function(topic){
                           app.Forum.html.form.hidden(topic, function(t) { if(parseInt(t._id.toString()) < 10) return true; } );
                           return "";
                       }});
}

if(moveTopic){
    topicActions.push({title : "Move Topic",
                       func : app.Forum.html.selectify(topics,
                                                       function(t){ return {onChange: "moveDlg('Topic', moveTopic, '"+t._id+"')", id: t._id.toString()}; },
                                        {filter: function(t, option) { return t._id != option._id; } } ).wrap(function(proceed, t){
                                            // We wrap the function so that when we get the Special Topics,
                                            // we don't generate a <select> for you to move them.
                                            if(parseInt(t._id.toString()) < 10)
                                                return "&nbsp;";
                                            return proceed(t);
                                        })
                      });
}


var movetargets = [];

if(app.Forum.Controller.hasPermission(user, "moveThread")){
    var topics = db.forum.topics.find({parent: null});
    topics = topics.toArray();
    movetargets = movetargets.concat(topics);
}

if(addActions && app.Forum.Controller.hasPermission(user, "edPickThread")) {
   actions.push({ title : "Editor's Pick",
                  func : function(thread) {
      editorPick(thread);
      return "";
   }});
}


deleteThread = app.Forum.Controller.hasPermission(user, "deleteThread");
moderateThread = app.Forum.Controller.hasPermission(user, "moderateThread");

if(deleteThread)
    movetargets.push({_id: app.Forum.Controller.specialDeletedID, name: "Delete"});

if(moderateThread)
    movetargets.push({_id: app.Forum.Controller.specialModeratedID, name: "Moderate"});

if(addActions && movetargets.length > 0) {
    actions.push({title : "Move Thread",
                  func : app.Forum.html.selectify(movetargets, function(thread){ return {onChange:
                                                                                         "if(this.value != '"+ (topic ? topic._id : "") +"') moveDlg('Thread', move, '"+thread._id+"'); else { alert('You are already in that topic!'); this.value = ''; }", id: thread._id.toString() }; } )
                 });
}


%>

<script type="text/javascript">

var yes = { newtopic : function() {
          //user confirms the creation of a new topic
          dialog.hide();
          var ntForm = document.getElementById("newtopic");
          var passData = "";
          for(var i=0; i<ntForm.elements.length; i++) {
              passData += "&"+ntForm.elements.item(i).name + "="+encodeURIComponent(ntForm.elements.item(i).value);
          }
          passData = passData.substring(1);
          ajax(passData, "topic_new.jxp", addTopicToTable);
     },
     move : function() {
          dialog.hide();
          dialog.target(dialog.targetId);
     },
     confirm : function() {
          dialog.hide();
     },
     edittopic : function() {
          dialog.hide();
          var ntForm = document.getElementById("edittopic");
          var passData = "id="+encodeURIComponent(ntForm.elements.item(0).value);
          passData += "&name="+encodeURIComponent(ntForm.elements.item(1).value);
          passData += "&description="+encodeURIComponent(ntForm.elements.item(2).value);

          if(ntForm.elements.item(3).checked)
               passData += "&closed=on";
          else
               passData += "&closed=off";

          ajax(passData, "topic_edit.jxp", changeTagline);
     },
     newuser: function() {
          dialog.hide();
          var form = document.getElementById('userform');
          form.submit();
     }
};


var no = { newtopic : function() { dialog.hide(); },
     move : function() { dialog.hide(); },
     edittopic : function() { dialog.hide(); },
     newuser: function() { dialog.hide(); } };


// when a topic name is found using the dropdown, it may have some &nbsp proceeding it
function trimTopicName(str) {
     while(str.substring(0,6) == "&nbsp;")
          str = str.substring(6);
     return str;
}

function moveDlg(label, target, targetId) {
    dialog.target = target;
    dialog.targetId = targetId;

    if(! document.getElementById(targetId).value) return;
    toTopicId = document.getElementById(targetId).value;
    dialog.toId = toTopicId;

    var fromTopic = targetId;
    var toTopic = "the home page";
    var children = YAHOO.util.Dom.getChildren(fromTopic);
    for(var i=0; i<children.length; i++) {
         if(children[i].value == toTopicId) {
              toTopic = trimTopicName(children[i].innerHTML);
              break;
         }
    }
    if(label == "Topic")
        fromTopic = "\""+document.getElementById(fromTopic+"_row_anchor").innerHTML+"\"";
    else {//moving thread
        child = YAHOO.util.Dom.getElementsByClassName("title", "div", "thread_"+fromTopic);
        x = child[0].innerHTML;
        fromTopic = "the thread \""+x.substring(x.indexOf(">")+1, x.lastIndexOf("<"))+"\"";
    }

    message = '<fieldset class="dlg"><legend>Move '+label+' to '+toTopic+'</legend>'
             +'<div class="field">Are you sure you want to move '+fromTopic+' to the topic "'+toTopic+'"?</div>'
             +'<div class="btns"><input type="button" class="button" value="Move" onclick="yes[\'move\']()">'
             +'<input type="button" class="button" value="Cancel" onclick="no[\'move\']()"></div>'
             +'</fieldset>';

    document.getElementById(targetId).value = "";
    makeDialog("", message);
}

function newTopic(parent) {
    var message = '<fieldset class="dlg"><legend>Create a New Topic</legend><form id="newtopic" action="topic_new">';
    if(parent)
         message += '<input type="hidden" name="parent" value="'+parent+'">';
    message += '<div class="field">Enter a name to create a new topic on this page.</div>'+
               '<div class="field"><label>Name</label><input class="text" name="newname" type="text"></div>'+
               '<div class="field"><label>Description</label><input class="text" name="desc" type="text"></div>'+
               '<div class="btns"><input type="button" class="button" onclick="yes[\'newtopic\']()" value="Save"><input type="button" class="button" onclick="no[\'newtopic\']()" value="Cancel></div></form></fieldset>';
    makeDialog("", message);
}

function editTopic(parent) {
  var message = '<div id="editTopicDlg"><fieldset class="dlg"><legend>Edit Topic</legend><form action="topic_edit" id="edittopic">'
    +'<input type="hidden" name="id" value="<%= opts.thisid %>">'
    +'<div class="field">Closing a topic prevents users from creating new threads.</div>'
      +'<div class="field"><label>Topic Name</label><input type="text" class="text" name="name" value="<%= content.HTML.escape((topic) ? topic.name : "") %>"></div>'
      +'<div class="field"><label>Description</label><input type="text" class="text" name="description" value="<%= content.HTML.escape((topic) ? topic.description : "") %>"></div>'
      +'<div class="field"><label>&nbsp;</label><input type="checkbox" class="check" name="closed" <%= (topic) ? (topic.allowPosts ? "" : "CHECKED") : "" %>><span class="rightlabel">Closed</span></div>'
      +'<div class="btns"><input type="button" class="button" value="Save" onclick="yes[\'edittopic\']()"><input type="button" class="button" value="Cancel" onclick="no[\'edittopic\']()"></div>'
  +'</form></fieldset></div>';

    makeDialog("", message);

}

//FIXME: Change URL, too, or refresh won't work
function changeTagline(response) {
    var r = response.split("&");
    document.getElementById("topicName").innerHTML = decodeURIComponent(r[0]);
    document.getElementById("tagline").innerHTML = decodeURIComponent(r[1]);
    location = 'viewtopic?name='+r[0];
}

function move(threadId) {
         topicId = document.getElementById(threadId).value;
         var passData = "thread="+threadId+"&to="+dialog.toId;
    ajax(passData, "moveThread.jxp", function(text){
        // If we move it into this thread, don't hide it.
        if(text.match("fail")){
            return;
        }
        text = text.replace(/<\/?response>/g, '').replace(/\s/g, '');
        var results = text.split(":");
        var id = results[0];
        if(id == "null") return;
        var count = results[1];
        var idnode = document.getElementById(id+"_row_anchor");
        var tr = idnode.parentNode.parentNode;
        var tds = YAHOO.util.Dom.getChildren(tr);
        tds[1].innerHTML = parseInt(tds[1].innerHTML, 10)+1;
        tds[2].innerHTML = parseInt(tds[2].innerHTML, 10)+parseInt(count, 10);
        document.getElementById("thread_"+threadId).style.display = "none";
    }, "POST");
}

function moveTopic(topicId) {
         var passData = "topic="+topicId+"&to="+dialog.toId;
         ajax(passData, "topic_move.jxp", reload, "POST");
}

function sticky(threadId, action) {
    ajax('', "thread_action"+"?select="+threadId+"&action="+action, function(){
        var div = document.getElementById("sticky_"+threadId);
        var row = document.getElementById("thread_"+threadId);
        var table = row.parentNode;
        var form = document.getElementById("stickyform_"+threadId);
        var header = YAHOO.util.Dom.getFirstChild(table);
        var getDate = function(elem){
            for(var i = 0; i < elem.attributes.length; i ++){
                var attr = elem.attributes[i];
                if(attr.name == "date") return attr.value;
            }
            return 99999999999999;
        };
        var thisdate = getDate(row);
        if(action == "sticky"){
            if(div.innerHTML.match("sticky-icon")){
                if(div.style.display == "none") div.style.display = "inline";
            }
            else{
                div.innerHTML = '<img src="css/sticky-icon.gif" class="sticky">';
            }
            table.removeChild(row);

            var lastRow;
            // bring the row to the top
            var nextRow = YAHOO.util.Dom.getNextSiblingBy(header, function(sib){
                // return the next row which is either not sticky or younger than this row

                lastRow = sib;
                var sibdate = getDate(sib);
                if(thisdate > sibdate || ! YAHOO.util.Dom.hasClass(sib, "sticky")) return true;
                return false;
            });
            if(nextRow)
                YAHOO.util.Dom.insertBefore(row, nextRow);
            else {
                YAHOO.util.Dom.insertAfter(row, lastRow);
            }
            YAHOO.util.Dom.addClass(row, "sticky");
            form.onclick = function () {sticky(threadId, "unsticky");};
            form.value = "Unsticky";
        }
        else {
            div.style.display = "none";
            table.removeChild(row);

            var lastRow;
            // restore its rightful order
            var nextRow = YAHOO.util.Dom.getNextSiblingBy(header, function(sib){
                // return the first row that is neither sticky nor younger than this row
                lastRow = sib;
                if(YAHOO.util.Dom.hasClass(sib, 'sticky') || thisdate < getDate(sib)) return false;
                return true;
            });
            if(nextRow)
                YAHOO.util.Dom.insertBefore(row, nextRow);
            else {
                YAHOO.util.Dom.insertAfter(row, lastRow);
            }
            YAHOO.util.Dom.removeClass(row, "sticky");
            form.onclick = function () {sticky(threadId, "sticky");};
            form.value = "Sticky";
        }
        var rows = YAHOO.util.Dom.getChildren(table);
        for(i=1; i<rows.length; i++) {
            if(i%2 == 0)
                 YAHOO.util.Dom.addClass(rows[i], "even");
            else
                 YAHOO.util.Dom.removeClass(rows[i], "even");
        }
    });
}

function reload() {
         location.reload();
}

function togglePick(threadId) {
    var passData = "thread="+threadId;
    ajax(passData, "editorPick.jxp", function(){
        var div = document.getElementById("edpick_"+threadId);
        if(div.innerHTML.match(/Thumbs/)){
            if(div.style.display == "none") div.style.display = "inline";
            else div.style.display = "none";
        }
        else{
            div.innerHTML = '<img src="css/Thumbsup-icon.gif" class="edPick">';
        }
    });
}

function toggleHide(topicId) {
    var passData = "topic="+topicId;
    ajax(passData, "topic_hide.jxp", reload);
}

function showPopup(id) {
    document.getElementById(id).style.display = "block";
    return false;
}
function cancelPopup(id) {
        document.getElementById(id).style.display = "none";
}

function makeDialog(title, body, buttons) {
    dialog.setHeader(title);
    dialog.setBody(body);
    if (buttons) dialog.cfg.queueProperty("buttons", buttons);
    dialog.render(document.body);
    dialog.show();
}

function addTopicToTable(txt) {
    // if the topic was not successfully added, alert the user:
    if(txt == "This name is already in use.\n") {
        buttons = [ { text:"Okay", handler: no['newtopic'] } ];
        makeDialog("Error", txt, buttons);
    }
    else {
        //Does the table exist?  If not, reload the page.
        var header = document.getElementById("tr_header");
        if(!header) {
            location.reload();
            return;
        }

        // if the table exists and the new topic was successfully created, add a new row to the topic table
        var newRow = header.cloneNode(true);
        YAHOO.util.Dom.insertAfter(newRow, header);
        newRow.innerHTML = txt.substring(txt.indexOf(">")+1, txt.lastIndexOf("<"));
    }
}


</script>
<%
if(topic && !topic.allowPosts) {
     print('<img src="css/lock-icon.gif">');
}
%>
<h1 id="topicName"><%= name %></h1><%= (opts.noRSS || !topic) ? '' : '<a href="topic_rss.jxp?id='+t._id+'"><img src="/images/feed-icon16x16.png?lm=1203477029000" class="feed"></a>' %>
<div id="tagline"><%= description || "" %></div>


<%
// Show subtopics
if(subs && subs.length > 0){
    var tableid = "table1";
    %>
    <table id="<%= tableid %>" class="style1">
       <tr id="tr_header"><th><%= (opts.thisid == null ? "Topic" : "Subtopic") %></th><th>Threads</th><th>Posts</th>
       <%
       for(i=0; i < topicActions.length; i++) {
            print("<th>"+ topicActions[i].title +"</th>");
       } %>
       </tr>
       <%
       var numrows = 0;
       subs.forEach(function(topic){ app.Forum.renderer.topic(topic, {actions: topicActions}, ++numrows); });
       if(numrows > 1) {
            var numcols = 3+topicActions.length-1;
            if(subs[subs.length-1]._id < 5) {
                numrows-=2;
            }
            app.Forum.js.addDragAndDrop(tableid, numrows, numcols);
       }
       %>
       <script type="text/javascript">var lastRow = <%= numrows %>;</script>
    </table>
    <%
}

// Show threads
if (threads){

    if(paging){
        core.app.forum.data.paging();
        paging = new app.Forum.data.Paging(threads, {pageSize: 20,
                                                     minWindow: 5},
                                           request);
        threads = paging.slice();

        print('<div class="paging">');
        core.app.forum.html.paging(paging);
        print('</div>');
    }
    %>
     <table id="style1" >
          <tr><th>Thread</th><th>Posts</th><th>Last post</th>
          <%
          for(i=0; i < actions.length; i++) {
                print("<th>"+ actions[i].title+"</th>");
          } %>
          </tr>
          <%
          var even = false;
          if(threads.length > 0)
               threads.forEach( function(t) {
                    app.Forum.renderer.thread(t, {actions: actions}, even);
                    even = !even;
               });
          else
               print ("<tr><td colspan=\""+3+actions.length+"\">No threads right now!</td></tr>");%>
     </table>
<%
    if(paging){
        print('<div class="paging">');
        core.app.forum.html.paging(paging);
        print('</div>');
    }
}%>
